- pipeline: 'Build and Deploy To Staging (AWS)'
  variables:
    - key: 'URL'
      value: 'https://example.steadfa.st'
      type: 'VAR'
    - key: 'APP_NAME'
      value: 'example.steadfa.st'
      type: 'VAR'
    - key: 'SERVER_IP'
      value: '111.11.111.111'
  events:
    - type: 'PUSH'
      refs:
        - 'refs/heads/dev'
  target_site_url: '$URL'
  fetch_all_refs: true
  actions:
    - action: 'Install composer dependencies'
      type: 'BUILD'
      working_directory: '/buddy/app'
      docker_image_name: 'library/php'
      docker_image_tag: '8.3'
      execute_commands:
        - 'composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs'
      setup_commands:
        - 'apt-get update && apt-get install -y git zip'
        - 'curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer'
        - '# php ext gd'
        - 'apt-get install -y libfreetype6-dev'
        - 'apt-get install -y libjpeg62-turbo-dev'
        - 'apt-get install -y libpng-dev'
        - 'docker-php-ext-configure gd --with-freetype --with-jpeg'
        - 'docker-php-ext-install gd'
        - '# php ext zip'
        - 'apt-get install -y zip'
        - 'apt-get install -y unzip'
        - 'apt-get install -y zlib1g-dev'
        - 'apt-get install -y libzip-dev'
        - 'docker-php-ext-install zip'
        - '# php ext pdo_mysql'
        - 'docker-php-ext-configure pdo_mysql --with-pdo-mysql'
        - 'docker-php-ext-install pdo_mysql'
      shell: 'BASH'
      volume_mappings:
        - '/:/buddy/app'
      cache_base_image: false
    - action: 'Run Vite build'
      type: 'BUILD'
      working_directory: '/buddy/app'
      docker_image_name: 'node'
      docker_image_tag: '22.5.1-alpine3.20'
      execute_commands:
        - 'npm install'
        - 'npm run build'
      setup_commands:
        - 'npm install -g @esbuild/linux-x64'
      volume_mappings:
        - '/:/buddy/app'
      cache_base_image: false
    - action: 'Deploy to deploy cache'
      type: 'SFTP'
      input_type: 'BUILD_ARTIFACTS'
      local_path: '/'
      remote_path: '/home/forge/$APP_NAME/deploy-cache'
      login: 'forge'
      host: '$SERVER_IP'
      port: '22'
      env_key: 'secure!neSiPiqgzT5xpflRL3C1dw==.0Tuqda3u2+2RGeNv3X1pcg=='
      authentication_mode: 'ENV_KEY'
      deployment_excludes:
        - '/.git/'
        - '/web/cpresources/*'
        - '/storage/*'
        - '/.ddev/*'
        - '/node_modules/*'
        - '/.editorconfig'
        - '/.env.local'
        - '/.gitignore'
        - '/.prettierignore'
        - '/.prettierrc.cjs'
        - '/buddy.yml'
        - '/carbon-setup.md'
        - '/composer.json'
        - '/composer.lock'
        - '/package-lock.json'
        - '/package.json'
        - '/README.md'
        - '/seed.sql'
        - '/swiff.config.js'
        - '/yarn.lock'
    - action: 'Post-deployment action'
      type: 'SSH_COMMAND'
      working_directory: '/home/forge/$APP_NAME'
      login: 'forge'
      host: '$SERVER_IP'
      env_key: 'secure!neSiPiqgzT5xpflRL3C1dw==.0Tuqda3u2+2RGeNv3X1pcg=='
      authentication_mode: 'ENV_KEY'
      commands:
        - 'if [ -d "releases/$BUDDY_EXECUTION_REVISION" ] && [ "$BUDDY_EXECUTION_REFRESH" = "true" ];'
        - 'then'
        - ' echo "Removing: releases/$BUDDY_EXECUTION_REVISION"'
        - ' rm -rf releases/$BUDDY_EXECUTION_REVISION;'
        - 'fi'
        - ''
        - 'if [ ! -d "releases/$BUDDY_EXECUTION_REVISION" ];'
        - 'then'
        - ' echo "Creating: releases/$BUDDY_EXECUTION_REVISION"'
        - ' cp -dR deploy-cache releases/$BUDDY_EXECUTION_REVISION;'
        - 'fi'
        - ''
        - 'echo "Creating: persistent directories"'
        - 'mkdir -p storage'
        - 'mkdir -p cpresources'
        - ''
        - 'echo "Symlinking: persistent files & directories"'
        - 'ln -nfs "$(pwd)/.env" releases/$BUDDY_EXECUTION_REVISION'
        - 'ln -nfs "$(pwd)/storage" releases/$BUDDY_EXECUTION_REVISION'
        - 'ln -nfs "$(pwd)/cpresources" releases/$BUDDY_EXECUTION_REVISION/web'
        - ''
        - 'echo "Linking current to revision: $BUDDY_EXECUTION_REVISION"'
        - 'rm -f current'
        - 'ln -s releases/$BUDDY_EXECUTION_REVISION current'
        - ''
        - 'echo "Removing old releases"'
        - 'cd releases && ls -t | tail -n +11 | xargs rm -rf'
      run_as_script: true
    - action: 'Migrate Craft and clear caches'
      type: 'SSH_COMMAND'
      working_directory: '/home/forge/$APP_NAME/current'
      login: 'forge'
      host: '$SERVER_IP'
      env_key: 'secure!neSiPiqgzT5xpflRL3C1dw==.0Tuqda3u2+2RGeNv3X1pcg=='
      authentication_mode: 'ENV_KEY'
      commands:
        - 'chmod a+x craft'
        - 'php8.3 craft migrate/all'
        - 'php8.3 craft project-config/apply --force'
        - 'php8.3 craft clear-caches/all'
